package com.example.demo.service;import com.example.demo.entity.Article;import com.example.demo.entity.Comment;import com.example.demo.entity.User;import com.example.demo.repository.ArticleRepository;import com.example.demo.repository.CommentRepository;import com.example.demo.repository.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.data.domain.Sort;import org.springframework.stereotype.Service;import java.sql.Time;import java.util.Date;@Servicepublic class ArticleService {    @Autowired    ArticleRepository articleRepository;    @Autowired    CommentRepository commentRepository;    @Autowired    UserRepository userRepository;    @Value("${database.pagesize}")    int pageSize;    public Object addArticle(String title, String content, String userAccount, Date time, String pic){        Article article = new Article();        article.setTitle(title);        article.setContent(content);        article.setTime(time);        article.setPic(pic);        article.setUser(userRepository.findByUserAccount(userAccount));        articleRepository.save(article);        return true;    }    public Object addComment(String content, Long articleId, String userAccount, Date time, String pic){        Comment comment = new Comment();        comment.setCommentContent(content);        comment.setArticle(articleRepository.findByArticleId(articleId));        comment.setUser(userRepository.findByUserAccount(userAccount));        comment.setTime(time);        comment.setPic(pic);        commentRepository.save(comment);        return true;    }    public Object getArticle(int page){        Pageable pageable = new PageRequest(page, pageSize, Sort.Direction.ASC, "articleId");        return articleRepository.findAll(pageable).getContent();    }}