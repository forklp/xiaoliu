package com.example.demo.service;import com.example.demo.entity.User;import com.example.demo.repository.UserRepository;import com.example.demo.util.RandomGenerator;import com.example.demo.util.VerificationCode;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.data.redis.core.RedisTemplate;import java.util.HashMap;import java.util.concurrent.TimeUnit;@Servicepublic class UserService {    @Autowired    UserRepository userRepository;    @Autowired    RedisTemplate redisTemplate;    @Autowired    VerificationCode verificationCode;    public String register(String account,String password,String code,String inviteCode){        if(userRepository.findByUserAccount(account)!=null)return "账号已经存在";        if(!redisTemplate.opsForValue().get(account+"v").equals(code))return "验证码错误";        if(inviteCode != null)        userRepository.addUserPoint(inviteCode);        User user = new User();        user.setUserAccount(account);        user.setUserPassword(password);        user.setUserCode(RandomGenerator.generateUUID());        user.setUserPoint(0);        userRepository.save(user);        return "注册成功";    }    public Object login(String account,String password){        if(userRepository.findByUserAccountAndUserPassword(account,password)==null)return "用户名或密码错误";        HashMap<String,Object> res = new HashMap<>();        String token = RandomGenerator.generateUUID();        redisTemplate.opsForValue().set(token,account,604800, TimeUnit.SECONDS);        res.put("token",token);        return res;    }    public String getcode(String phonenumber){        String code = RandomGenerator.generateCode();        verificationCode.getCode(phonenumber,code);        redisTemplate.opsForValue().set(phonenumber+"v",code,604800, TimeUnit.SECONDS);        return "获得验证码成功";    }    public boolean checkToken(String token){        return redisTemplate.opsForValue().get(token) != null;    }    public Object getUserInfo(String account){        return userRepository.findByUserAccountO(account);    }    public String reducePoint(int point,String account){        if(userRepository.findByUserAccount(account).getUserPoint()<point)            return "用户积分不足";        userRepository.reduceUserPoint(point,account);        return "减少用户"+point+"积分";    }}