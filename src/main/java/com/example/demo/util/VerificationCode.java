package com.example.demo.util;import com.github.qcloudsms.SmsSingleSender;import com.github.qcloudsms.SmsSingleSenderResult;import com.github.qcloudsms.httpclient.HTTPException;import org.json.JSONException;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Component;import java.io.IOException;import java.util.Random;@Componentpublic class VerificationCode {    @Value("${code.appid}")    int appid;    @Value("${code.appkey}")    String appkey;    @Value("${code.templateId}")    int templateId;    String smsSign = "小留同学预约验证码";    public void getCode(String phoneNumbers,String code){        try {            String[] params = {code};//数组具体的元素个数和模板中变量个数必须一致，例如事例中templateId:5678对应一个变量，参数数组中元素个数也必须是一个            SmsSingleSender ssender = new SmsSingleSender(appid, appkey);            SmsSingleSenderResult result = ssender.sendWithParam("86", phoneNumbers,                    templateId, params, smsSign, "", "");  // 签名参数未提供或者为空时，会使用默认签名发送短信            System.out.println(result);        } catch (HTTPException e) {            // HTTP响应码错误            e.printStackTrace();        } catch (JSONException e) {            // json解析错误            e.printStackTrace();        } catch (IOException e) {            // 网络IO错误            e.printStackTrace();        }    }}
