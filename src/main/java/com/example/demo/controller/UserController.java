package com.example.demo.controller;import com.example.demo.entity.User;import com.example.demo.repository.UserRepository;import com.example.demo.service.UserService;import com.example.demo.util.VerificationCode;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping("/user")public class UserController {    @Autowired    UserService userService;    @Autowired    VerificationCode verificationCode;    @PostMapping("/register")    public Object register(@RequestParam("account")String account,                           @RequestParam("password")String password,                           @RequestParam("code")String code,                           @RequestParam("invitecode")String invitecode){        try{            return userService.register(account,password,code,invitecode);        }catch(Exception e){            return e.getMessage();        }    }    @PostMapping("/login")    public Object login(@RequestParam("account")String account,                        @RequestParam("password")String password){        try{            return userService.login(account,password);        }catch (Exception e){            return e.getMessage();        }    }    @PostMapping("/getcode")    public Object getCode(@RequestParam("phonenumber")String phonenumber){        try {   return userService.getcode(phonenumber);        }catch(Exception e){            return e.getMessage();        }    }    @PostMapping("/getuserinfo")    private Object getUserInfo(@RequestParam("account")String account){        try {            return userService.getUserInfo(account);        }        catch (Exception e){            return e.getMessage();        }    }    @PostMapping("/reducepoint")    private Object reducePoint(@RequestParam("account")String account,                               @RequestParam("point")int point){        try{            return userService.reducePoint(point,account);        }catch (Exception e){            return e.getMessage();        }    }}